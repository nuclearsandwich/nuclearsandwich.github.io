<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Education | Mad Ramblings of a Lunatic Hacker]]></title>
  <link href="http://blog.nuclearsandwich.com/blog/categories/education/atom.xml" rel="self"/>
  <link href="http://blog.nuclearsandwich.com/"/>
  <updated>2012-04-02T22:08:25-07:00</updated>
  <id>http://blog.nuclearsandwich.com/</id>
  <author>
    <name><![CDATA[Steven! RagnarÃ¶k]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Computer Science Education in Silicon Valley]]></title>
    <link href="http://blog.nuclearsandwich.com/blog/2011/01/22/computer-science-education-in-silicon-valley/"/>
    <updated>2011-01-22T09:11:00-08:00</updated>
    <id>http://blog.nuclearsandwich.com/blog/2011/01/22/computer-science-education-in-silicon-valley</id>
    <content type="html"><![CDATA[<p>a.k.a: <em>Dear SJSU pls stop making me memorize the Java API, my degree is in
Comp. Sci. not JDK 1.6 kthxbaiSTFU</em></p>

<p>One would think that being in the heart of Silicon Valley, the very birthplace
of the personal computer, would be a colossal advantage to a student of computer
science and mathematics who is pursuing software development as a career. Sadly,
this is not the case. The curriculum and course materials taught by the two
local community colleges I've attended in the past and the university at which I
am enrolled is frightfully out of date. But not nearly as paleolithic as the
evaluation methods.</p>

<p>There are essentially two kinds of computer science courses (10 different kinds
for those in the know), implementation classes and theory classes. The bulk of
my criticism here lies in theimplementation classes. When I started taking
programming classes in college, I began with Intro to Programming in Java and
Programming I in C++. My father, a games developer from days of yore took the
courses with me for laughs. In class, there was a computer at every seat, we
took our notes directly in the text editor, ran code that was being written on
the board live and often times had to correct errors in the professor's code
while he was writing it out. However, all our exams were handwritten and thus
there was no way to check our code against the compiler. In intro to programming
this isn't really a big deal, but later down the road in Object Oriented Design
and Patterns, we're being asked to write snippets of complex GUI programs
utilizing <em>__dozens))</em> of standard library classes and methods. In one course,
the solution for this was a single laptop with the standard Java API
documentation on it that the students could wait in line for <em>during</em> the exam.
In another, it is allowing each student to have a packet of <em>n</em> 8.5 x 11 pages
on the <em>n</em>th test of the semester.In this modern world where APIs are subject to
change and up-to-date documentation on every thing (except Ruby's Net::HTTP,
Oh Snap!) is readily available online, wasting brain-space memorizing API calls
is downright fscking stupid and I refuse to do it. This is another incarnation
of the classic fable "Give a man a fish, he will pass a test. Teach him to RTFM,
he will actually be a software developer."</p>

<p>I have so far had only one class where the exam was to write a program, at a
computer and submit it in an inbox by the end of the class period. This is
absolutely the correct way to do things. The professor told us at the beginning
of the exam that perusing the docs (.Net) online was A-OK but that going
anywhere else would result in an F on the exam. He didn't even really walk
around and check. He had the wisdom to realize that cheaters will cheat and that
the internet can only help so much if you don't know what you're doing. Those
exams were not only more straightforward, fun, and challenging, but also the
most educational I have had within the realm of software development thus far
in the five years I've been a college student.</p>

<p>So please, if you're given the opportunity to teach a batch of computer
scientists, ask yourself if your class is about concepts or coding and if the
latter, write your test to be implemented on the computer in 90 minutes time.
None of their future employers give two shits about whether or not they know
what method to call on JDialog to get the output you want. That can be looked
up. They're looking for confident implementers who can pick up with a new
language or framework in an afternoon and get started right away.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why I Try to Be Satisfied With Partial Credit and You Should Too]]></title>
    <link href="http://blog.nuclearsandwich.com/blog/2010/11/07/why-i-try-to-be-satisfied-with-partial-credit-and-you-should-too/"/>
    <updated>2010-11-07T11:42:00-08:00</updated>
    <id>http://blog.nuclearsandwich.com/blog/2010/11/07/why-i-try-to-be-satisfied-with-partial-credit-and-you-should-too</id>
    <content type="html"><![CDATA[<p>Everybody knows about partial credit, partial credit is what happens when you
half-ass that essay, or forget to start that assignment until the morning before
its due. Sometimes, partial credit comes at you completely out of the blue, when
you thought you had the assignment in the bag. If you're professor is really out
to get you, then they will only give "full credit" for "outstanding work",
whatever that means.</p>

<p>I got partial credit in early elementary school because I picked things up
rather quickly and once I'd gotten the hang of things, I stopped working at them
and went back to Mario or Sonic. I got partial credit in late elementary and
middle school because I didn't understand the value of what I was learning at
the time. I got partial credit in high school because there were far too many
things more fun than doing all the assignments or studying for the tests and
quizzes. I get partial credit in college because I work for a living, and like
it, and try to maintain the shambles that is my personal life. I've never been
the sort to focus on school, but that doesn't mean I don't agonize every time I
get an assignment back with less than perfect. Autograded assignments such as
those for calculus and physics, or most horribly, an online submission for a
computer program, which gives you instant and mercilessly objective feedback.
Well, it's like a drug, like failing to get the high score when the initials
you're trying to beat are those of the jock kid who used the allowance from his
rich parents to woo away your girlfriend. I just keep putting quarters in until
I'm completely tapped. I recently sent an email to one of my professors because
the amount of out-of-class work for their class for one week exceeded the time I
spent sleeping and doing work for all my other classes combined for that week,
which anyone must be forced to admit, is a little absurd. The reply I got was
simply this:</p>

<blockquote><p>just do the best you can, and call it a day. Everyone is subjected to the
same thing...  You don't need to get every single point.</p></blockquote>

<p>You don't need to get every single point. In my estimation, there are two*
primary reasons professors assign as much as they do. Either they firmly believe
that their class is the only one you should be taking that semester and that you
aren't doing anything else or they've completely forgotten the insanity of
undergraduate studies. So you can see that getting such a candid admission that
collecting all the points is not necessary to knowing the material. And indeed,
I had a week previously received the highest grade in the class on the exam.
(45/50, not all the pointseven then.)</p>

<p>It takes two hands to count the number of times I conciously took partial credit
in the last month. Sometimes it was to study harder for another class or
complete an assignment that was weighted more heavily, sometimes it was to wrap
up a project for work, and other times it was just because the coffee was hot,
the conversation good and I didn't want to pull out my books and give up the
conversation. Some nights I just wanted to put in a full night's rest. But I do
it, I try to use it sparingly, but I'm also not going to commit ritual suicide
when that ugly <strong>B</strong> shows up on my transcript at the end of the semester. A
complete stranger might see that and see a student who "didn't apply himself
fully" or some other nonsense. But my girlfriend will see it as the week I spent
visiting her, my employer will see it as the projects I stayed up all night
finishing to be ready the next morning, and my old friend will see it as the
rainy afternoon at the coffee house we spent catching up and ignoring the world.
I'll see it as a representation of the rewards for my effort in balancing the
many aspects of my life and I'll have the knowledge of what I learned to judge
for myself what portion of the education offered I took for myself. I generally
find that I got what I wanted and often much much more. So, the next time you're
faced with a choice between catching up with an old friend, or getting a full
night's sleep for the first time in a month, and getting a passing grade or full
credit on an assignment, just remember: "You don't need to get every single
point."</p>

<p>*There is a third less common reason that is quite popular with math teachers
and that is that C is defined as average and is therefore where they want most
of their students to fall with a standard bell curve around it and grading
convention be damned... sadists.</p>
]]></content>
  </entry>
  
</feed>
